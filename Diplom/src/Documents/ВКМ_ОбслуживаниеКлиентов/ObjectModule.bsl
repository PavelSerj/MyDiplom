
#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//добавлен код проведения по регистру накопления ВыполненныеКлиентуРаботы 
	//с проверкой даты документа и вида договора - абонентская плата в запросе
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ФактическиПотраченоЧасов) КАК ФактическиПотраченоЧасов,
		|	СУММА(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка = &Ссылка
		|	И
		|		ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Договор.ВКМ_ВидыДоговоровКонтрагентов = &ВКМ_ВидыДоговоровКонтрагентов
		|	И
		|		(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Дата > ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Договор.ВКМ_НачалоДействияДоговора
		|	И
		|		ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Дата < ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Договор.ВКМ_КонецДействияДоговора)
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВКМ_ВидыДоговоровКонтрагентов", Перечисления.ВКМ_ВидыДоговоровКонтрагентов.АбонентскаяПлата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда	
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// регистр накопления ВКМ_ВыполненныеКлиентуРаботы
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.Договор = Договор;
			Движение.КоличествоЧасов = ВыборкаДетальныеЗаписи.ФактическиПотраченоЧасов;
				
			СуммаКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту * ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы;
				
			Движение.СуммаКОплате = СуммаКОплате;
			
		КонецЦикла;
	
	Иначе //если ничего нет в выборке, значит вид договора или дата не подходят
	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Документ не может быть проведен. Проверьте вид договора и дату";
		Сообщение.Сообщить();
		Отказ = Истина;

	КонецЕсли;
	
	//проведение по регистру накопления ВыполненныеСотрудникомРаботы
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ФактическиПотраченоЧасов КАК ФактическиПотраченоЧасов,
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыТрудаСрезПоследних.ПроцентОтРабот, 1) КАК ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыТруда.СрезПоследних(&Дата,) КАК ВКМ_УсловияОплатыТрудаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиентов.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы
		|		ПО ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Специалист = ВКМ_УсловияОплатыТрудаСрезПоследних.Сотрудник
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		//Процент от оплаты в случае отсутствия сделал 1, через есть Null, проверяю установлен ли процент
		Если ВыборкаДетальныеЗаписи.ПроцентОтРабот = 1 Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "На дату документа сотруднику не установлен процент";
			Сообщение.Сообщить();
		Иначе
			//Регистр накопления ВКМ_ВыполенныеСотрудникомРаботы
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.Период = Дата;
			Движение.Сотрудник = Специалист;
			Движение.ЧасовКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту;
		
			СуммаКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту * ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы * ВыборкаДетальныеЗаписи.ПроцентОтРабот / 100;
		
			Движение.СуммаКОплате = СуммаКОплате;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти
